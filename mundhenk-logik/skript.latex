% Einige zusätzliche Informationen für rubber
%  rubber erkennt nicht, dass die Datei weg kann, daher sagen wir es ihm
% rubber: clean $base.thm
%  rubber soll nach Änderungen an der Datei nochmal bauen
% rubber: watch $base.thm
% rubber: makeidx.tool      xindy
% rubber: makeidx.language  german-din
% rubber: makeidx.modules   indexstyle.xdy
%
% scrreprt trifft am Besten die Bedürfnisse eines Skripts, das ganze wird
% zweiseitig (twoside), d.h. es wird zwischen linker und rechter Seite
% unterschieden, und wir verwenden zwischen den Absätzen einen Abstand
% von einer halben Zeile (halfparskip) und dafür keinen Absatzeinzug,
% wobei die letzte Zeile eines Absatzes zu min. 1/4 leer ist.

\documentclass[halfparskip*,german,draft,twoside]{scrreprt}

\usepackage{ifthen}
\usepackage{makeidx}
% \usepackage[final]{graphicx}  % Für Grafiken
\usepackage{color}
\usepackage[draft=false,colorlinks,bookmarksnumbered,linkcolor=blue]{hyperref}

\usepackage[latin1]{inputenc}
\usepackage{ngerman}
% \usepackage{nicefrac}
% \usepackage{tabularx}

\usepackage{lmodern}	    % Latin Modern als Schrift verwenden
\usepackage[T1]{fontenc}    % T1-Schriften verwenden -- notwendig für PDFs

\usepackage[intlimits,leqno]{amsmath}
\usepackage{amssymb}     % wird für \R, \C,... gebraucht
\usepackage[thmmarks,hyperref]{ntheorem} % für die Theorem-Umgebungen
                                         % (satz, defini, bemerk)
\usepackage{xspace}      % wird weiter unten gebraucht
\usepackage{slashbox}    % für schräge Striche links oben in der
                         % Tabelle; s. texdoc slashbox

\usepackage{paralist}    % besseres enumerate und itemize und neue
                         % compactenum/compactitem; s. texdoc paralist

\usepackage{svn}         % Zum Auswerten und ordentlichen Darstellen der
                         % SVN-Schlüsselwörter (s. vor \begin{document})
                         % dafür muss in SVN noch das Flag svn:keywords
                         % auf "LastChangedRevision LastChangedDate"
                         % gesetzt werden
% \usepackage{ifpdf}       % Erkennung, ob PDF generiert wird; nützlich zur
                         % Unterscheidung bei Grafiken \input{XYZ.pdf_t}
\usepackage{xkeyval}     % für die Auswertung von Argumentenlisten; s.
                         % Neudefinition von \emph

% Damit auch die Zeichen im Mathemode in Überschriften fett sind
% <news:lzfyyvx3pt.fsf@tfkp12.physik.uni-erlangen.de>
\addtokomafont{sectioning}{\boldmath}

% nach dem Theoremkopf wird ein Zeilenumbruch eingefügt, die Schrift des
% Körpers ist normal und der Kopf wird fett gesetzt
\theoremstyle{break}
\theorembodyfont{\normalfont}
\theoremheaderfont{\normalfont\bfseries}
\theoremnumbering{arabic}

% Die folgenden Umgebungen werden einzeln nummeriert und am Ende jedes
% Kapitels zurückgesetzt
\newtheorem{satz}{Satz}[chapter]
\newtheorem{bemerk}{Bemerkung}[chapter]
\newtheorem{defini}{Definition}[chapter]
\newtheorem{bsp}{Beispiel}[chapter]
\newtheorem{festl}{Festlegung}[chapter]

% Die folgenden Theoremumgebungen bekommen keine Nummer
\theoremstyle{nonumberbreak}
\newtheorem{fakt}{Fakt}

\theoremheaderfont{\scshape}
\theorembodyfont{\normalfont}
% Das Zeichen am Ende eines Beweises
\theoremsymbol{\ensuremath{_\blacksquare}}
% \theoremsymbol{q.\,e.\,d.}
\newtheorem{proof}{Beweis:}

% Hier die Definition, wie \autoref die Umgebungen nennen soll, die mit
% \newtheorem definiert wurden
\newcommand*{\satzautorefname}{Satz}
\newcommand*{\bemerkautorefname}{Bemerkung}
\newcommand*{\definiautorefname}{Definition}
\newcommand*{\bspautorefname}{Beispiel}
\newcommand*{\festlautorefname}{Festlegung}
\newcommand*{\proofautorefname}{Beweis}
% Zwischen Unter- und Unterunterabschnitten sollte nicht unterschieden
% werden.
\renewcommand*{\subsectionautorefname}{Abschnitt}
\renewcommand*{\subsubsectionautorefname}{Abschnitt}

\pagestyle{headings}

\newcommand*{\R}{\mathbb{R}}      % reelle Zahlen
\newcommand*{\C}{\mathbb{C}}      % komplexe Zahlen
\newcommand*{\N}{\mathbb{N}}      % natürliche Zahlen
\newcommand*{\Q}{\mathbb{Q}}      % gebrochene Zahlen
\newcommand*{\Z}{\mathbb{Z}}      % ganze Zahlen

% Wenn irgendwo Unklarheiten zum Inhalt im Skript auftreten, können sie
% einfach mit \help{Ich verstehe das nicht} hervorgehoben werden. Dies
% macht es leichter sie alle zu finden und auch ganz einfach
% auszublenden, indem man den Befehl einfach leer definiert
\newcommand*{\help}[1]{\textcolor{green}{help: #1}}

% \todo ist das gleiche wie \help nur für offene Aufgaben
\newcommand*{\todo}[1]{\textcolor{red}{todo: #1}}

% Um wichtige Begriffe im Text überall gleich vorzuheben (gleiches
% Markup), sollte dieser Befehl verwendet werden. Das Argument wird
% automatisch als Indexeintrag verwendet und am Rand wiederholt. Da unter
% Umständen der Eintrag im Index oder am Rand anders lauten soll --
% z.\,B. Oberbegriff!Unterbegriff für den Index --, akzeptiert der Befehl
% ein optionales Argument in Form einer Liste, die mit
% index=<Indexeintrag>, rand=<Randeintrag> und indexrand=<Index- und
% Randeintrag> die jeweiligen Felder anders belegt.
\makeatletter
\newcommand*{\local@index}{}
\newcommand*{\local@rand}{}
\newcommand*{\local@indexrand}{}
\define@key{local}{index}{\renewcommand*{\local@index}{#1}}
\define@key{local}{rand}{\renewcommand*{\local@rand}{#1}}
\define@key{local}{indexrand}{\renewcommand*{\local@indexrand}{#1}}

\renewcommand*{\emph}[2][]{%
  \begingroup%
    \setkeys{local}{indexrand={#2}}%
    \setkeys{local}{#1}%
    \setkeys{local}{index={\local@indexrand},rand={\local@indexrand}}%
    \setkeys{local}{#1}%
    \textit{#2}%
    \if\@empty\local@index\relax\else\index{\local@index}\fi%
    \if\@empty\local@rand\relax\else%
      \marginpar{\raggedright\small\itshape\local@rand}%
    \fi%
  \endgroup%
}
\makeatother

% Definition für Xindy für die Trennung der einzelnen Abschnitte im
% Index. siehe auch die Datei indexstyle.xdy
\newcommand*{\indexsection}{\minisec}

% Für Leute, die nicht gern o.\,B.\,d.\,A. jedesmal eintippen wollen
\newcommand*{\obda}{o.\,B.\,d.\,A.\xspace}

% Diese Befehle sind dafür gedacht, dass die Symbole für "genau dann wenn"
% im ganzen Dokument gleich aussehen. Außerdem erlaubt es eine schnelle
% Veränderung aller Stellen, falls der Prof. doch nicht mehr gdw nimmt,
% sondern \Leftrightarrow.
\newcommand*{\gdw}{\ifthenelse{\boolean{mmode}}%
			       {\mspace{8mu}gdw\mspace{8mu}}%
			       {$gdw$\xspace}}
\newcommand*{\gdwdef}{\ifthenelse{\boolean{mmode}}%
			       {\mspace{8mu}gdw_{def}\mspace{8mu}}%
			       {$gdw_{def}$\xspace}}

% Um sicherzustellen, dass jeder Betrag-/jede Norm links und rechts die
% Striche bekommt, sind diese Befehle da. Damit kann man nicht die
% rechten Striche vergessen und es wird etwas übersichtlicher. (Vorschlag
% ist aus amsldoc) \abs[\big]{\abs{a}-\abs{b}} \leq \abs{a+b}
\newcommand*{\abs}[2][]{#1\lvert#2#1\rvert}
\newcommand*{\norm}[2][]{#1\lVert#2#1\rVert}

% Das original Epsilon sieht nicht so toll aus
\renewcommand*{\epsilon}{\varepsilon}
% ... und mancheinem gefällt auch das Phi nicht
\renewcommand*{\phi}{\varphi}

% Manchmal möchte man Begriffe erklären oder etwas aufzählen, das aber
% nicht fett gedruckt werden soll. Dazu diese Umdefinition einer
% description mit normaler Schrift
\newenvironment*{mdescription}%
               {\renewcommand{\descriptionlabel}[1]%
			      {\hspace\labelsep\normalfont ##1}%
		 \begin{description}}%
		 {\end{description}}

\makeindex

\SVN $LastChangedRevision$
\SVN $LastChangedDate$

\begin{document}

\title{Logik}
\author{Prof.\,Dr.\,Mundhenk}
\date{Semester: SS 2006}
\maketitle

\clearpage
\chapter*{Vorwort}
{\itshape

  Dieses Skript ist im Rahmen des
  \href{http://www.minet.uni-jena.de/~joergs/skripte/}{Projekts
  "`Vorlesungsskripte der Fakultät für Mathematik und Informatik"'}
  entstanden und wird im Rahmen dieses Projekts weiter betreut. Das
  Skript ist nach bestem Wissen und Gewissen entstanden. Denoch
  garantiert weder der auf der Titelseite genannte Dozent, noch die
  Mitglieder des Projekts für dessen Fehlerfreiheit. Für etwaige Fehler
  und dessen Folgen wird von keiner der genannten Personen eine Haftung
  übernommen. Es steht jeder Person frei, dieses Skript zu lesen, zu
  verändern oder auf anderen Medien verfügbar zu machen, solange ein
  Verweis die Internetadresse
  \url{http://www.minet.uni-jena.de/~joergs/skripte/} des Projekts
  enthalten ist.

  Diese Ausgabe trägt die Versionsnummer~\SVNLastChangedRevision\ und ist
  vom \SVNDate. Eine (mögliche) aktuellere Ausgabe ist unter
  \url{http://www.minet.uni-jena.de/~joergs/skripte/pdf/} verfügbar.

  Jeder ist dazu aufgerufen Verbesserungen, Erweiterungen und
  Fehlerkorrekturen für das Skript einzureichen bzw. zu melden oder selbst
  einzupflegen -- einfach eine E-Mail an die
  \href{mailto:skripte@listserv.uni-jena.de}{Mailingliste
  \texttt{<skripte@listserv.uni-jena.de>}} senden. Weitere Informationen
  sind unter der oben genannten Internetadresse des Projekts verfügbar.

  Hiermit möchten wir allen Personen, die an diesem Skript mitgewirkt
  haben, vielmals danken:
  \begin{itemize}
   \item \href{mailto:joerg@alea.gnuu.de}{Jörg Sommer
    \texttt{<joerg@alea.gnuu.de>}} (2006)
  \end{itemize}
}

\clearpage
\pdfbookmark[0]{Inhaltsverzeichnis}{inhaltsverzeichnis}
\tableofcontents

\clearpage
\pdfbookmark[0]{Auflistung der Sätze}{theoremlist}
\chapter*{Auflistung der Theoreme}

\pdfbookmark[1]{Sätze}{satzlist}
\section*{Sätze}
\theoremlisttype{optname}
\listtheorems{satz}

\pdfbookmark[1]{Definitionen und Festlegungen}{definilist}
\section*{Definitionen und Festlegungen}
% \theoremlisttype{all}
\listtheorems{defini,festl}

\clearpage
\pdfbookmark[0]{Literaturverzeichnis}{literaturverzeichnis}
\begin{thebibliography}{99}
 \bibitem{Mendelson} Mendelson: Introduction to mathematical logic
 \bibitem{Booles} Booles/Jeffrey: Computability and logic
 \bibitem{Nerode} Nerode/\ldots: Logic\ldots
\end{thebibliography}

\chapter{Aussagenlogik}

Eine \emph{Aussage} ist entweder \emph{wahr} oder \emph{falsch}.

Beispiele für Aussagen:
\begin{itemize}
 \item Die Straße ist nass. (falsche Aussage)
 \item Jena liegt an der Saale. (wahre Aussage)
 \item Hamburg liegt nicht in Thüringen. (falsche Aussage)
\end{itemize}

\emph{Negation} einer Aussage:
\begin{itemize}
 \item Die Straße ist nicht nass. (wahre Aussage)
 \item Jena liegt nicht an der Saale. (falsche Aussage)
\end{itemize}

\emph{Konjunktion} zweier Aussagen:
\begin{itemize}
 \item Jena liegt an der Saale \emph{und} die Straße ist nicht nass.
\end{itemize}

\emph{Disjunktion} zweier Aussagen:
\begin{itemize}
 \item Jena liegt an derr Saale \emph{oder} die Straße ist nicht nass.
\end{itemize}

\textit{Vorsicht:} Umgangssprachlich versteht man unter "`oder"' oft ein
"`entweder \ldots oder"' (genau eine der beiden Aussagen gilt), in der
Logik ist es aber auch möglich, dass beide Teilaussagen wahr sind.

\emph{Implikation} zweier Aussagen:
\begin{itemize}
 \item \emph[rand=wenn\ldots dann,index=wenn\ldots dann]{Wenn
  \textnormal{die Straße nass ist,} dann} liegt Hamburg in
  Thüringen.
\end{itemize}

\emph{Äquivalenz} zweier Aussagen:
\begin{itemize}
 \item Jena liegt an der Saale \emph{genau dann, wenn} Hambug in
  Thüringen liegt.
\end{itemize}

Formal verwendet man statt Aussagen \emph{Variablen} bzw. Aussagezeichen
wie $A_{0}, A_{1}, A_{2}, \ldots,B_{0},\\ B_{1}, B_{2}, \ldots$, statt
"`Verknüpfungen"' nimmt man Symbole: $\neg$ (Negation), $\wedge$
(Konjunktion), $\vee$ (Disjunktion), $\rightarrow$ (Implikation),
$\leftrightarrow$ (Äquivalenz)

\begin{defini}
  Aussagenlogische Formeln sind wie folgt definiert:
  \begin{enumerate}
   \item Jede Variable $A_{0}, A_{1}, A_{2}, \ldots,B_{0}, B_{1}, B_{2},
     \ldots$ ist eine aussagenlogische Formel.
   \item Wenn $\alpha$ und $\beta$ aussagenlogische Formeln sind, dann
    sind auch
    \begin{gather*}
      (\neg \alpha), (\alpha\wedge\beta), (\alpha\vee\beta),
         (\alpha\rightarrow\beta), (\alpha\leftrightarrow\beta)
    \end{gather*}
    aussagenlogische Formeln.
  \end{enumerate}
\end{defini}

\begin{bsp}[Beispiele für aussagenlogische Formeln]
  Wenn $A_{12}$ und $B_{1}$ aussagenlogische Formeln sind, dann sind dies
auch aussagenlogische Formeln:
  \begin{gather*}
    (A_{12} \wedge B_{1}), ((\neg A_{5}) \rightarrow B_{1}),
       ((A_{12}\wedge B_{1}) \vee (\neg ((\neg A_{5})\rightarrow B_{1}))
  \end{gather*}
\end{bsp}

\begin{bemerk}
  überflüssige Klammern können weggelassen werden. $A,B,C,\ldots$ können
auch als Variablen genommen werden.

  Bindungsstärke der Verknüpfungszeichen:
  \begin{enumerate}
   \item $\neg$
   \item $\wedge$, $\vee$
   \item $\rightarrow$
   \item $\leftrightarrow$
  \end{enumerate}

  \begin{gather*}
    (A_{12}\wedge B_{1}) \vee \neg (\neg A_{5}\rightarrow B_{1})
  \end{gather*}
\end{bemerk}

Jede Variable einer aussagenlogische Formel kann einen der
\emph{Wahrheitswerte} $w$ ("`\emph{wahr}"', $T$, 1) und $f$
("`\emph{falsch}"', $F$, 0) annehmen. Der Wahrheitswert einer
zusammengesetzen Formel ergibt sich aus den Wahrheitswerten ihrer Teile.

\begin{table}[h]
  \centering
  \begin{tabular}{cc*{5}{|c}}
    $\alpha$ & $\beta$ & $\alpha\wedge\beta$ & $\alpha\vee\beta$ &
       $\alpha\rightarrow\beta$ & $\alpha\leftrightarrow\beta$ &
       $\neg\alpha$\\
    \hline
    $f$ & $f$ & $f$ & $w$ & $w$ & $w$ & $w$\\
    $f$ & $w$ & $f$ & $w$ & $w$ & $f$ &\\
    $w$ & $f$ & $f$ & $w$ & $f$ & $f$ & $f$\\
    $w$ & $w$ & $w$ & $w$ & $w$ & $w$ &
  \end{tabular}
  \caption{Wahrheitstafeln}
\end{table}

Wenn $\underbrace{die Straße nass ist}_{A}$, dann $\underbrace{liegt
Hamburg in Thüringen}_{B}$, wobei $A$ den Wahrheitswert $f$ und $B$ den
Wahrheitswert $f$ hat. Also ist $A\rightarrow B$ wahr.

\begin{center}
  \begin{tabular}{ccc*{5}{|c}}
    $A$ & $B$ & $C$ & $A\wedge B$ & $B\vee C$ & $A\rightarrow(B\vee C)$ &
    $\neg(A\rightarrow(B\vee C))$ & $\ldots \leftrightarrow \ldots$\\
    \hline
    $f$ & $f$ & $f$ & $f$ & $f$ & $w$ & $f$ & $w$\\
    $f$ & $f$ & $w$ & $f$ & $w$ & $w$ & $f$ & $w$\\
    $f$ & $w$ & $f$ & $f$ & $w$ & $w$ & $f$ & $w$\\
    $f$ & $w$ & $w$ & $f$ & $w$ & $w$ & $f$ & $w$\\
    $w$ & $f$ & $f$ & $f$ & $f$ & $f$ & $w$ & $f$\\
    $w$ & $f$ & $w$ & $f$ & $w$ & $w$ & $f$ & $w$\\
    $w$ & $w$ & $f$ & $w$ & $w$ & $w$ & $f$ & $f$\\
    $w$ & $w$ & $w$ & $w$ & $w$ & $w$ & $f$ & $f$\\
  \end{tabular}
\end{center}

\emph{Verknüpfungsbaum}: \todo{Bild vom Verknüpfungsbaum der obigen
aussagenlogische Formel}

Die Zuordnung von Wahrheitswerten zu Variablen nennt man eine
\emph{Belegung}. Die Belegung ist eine Funktion von Variablen auf
Wahrheitswerte. Wir beschreiben eine Belegung durch eine Menge
\begin{gather*}
  \mathcal{A} \subseteq \{ A_{0}, A_{1}, A_{2}, \ldots,B_{0}, B_{1},
     B_{2}, \ldots \} \cup \{ \neg A_{0}, \neg A_{1}, \neg A_{2}, \ldots,
\neg B_{0}, \neg B_{1}, \neg B_{2}, \ldots \}
\end{gather*}
mit $\{A_{i}, \neg A_{i}\}\not\subseteq \mathcal{A}$ und $\{B_{i}, \neg
B_{i}\}\not\subseteq \mathcal{A}$ für alle $i$.

$A_{i},B_{i}, \neg A_{i}, \ldots$ und $\neg B_{i}$ nennt man
\emph{Literale}.

Eine Belegung $\mathcal{A}$ \emph{passt} zur Formel $\alpha$, falls für
jede Variable $X$, die in der Formel $\alpha$ vorkommt, gilt:
\begin{center}
  $X\in\mathcal{A}$ oder $\neg X\in\mathcal{A}$
\end{center}

Wenn $\mathcal{A}$ eine Belegung ist, die zu der aussagenlogischen
Formel $\alpha$ passt, dann ist $\mathcal{A}(\alpha)$ wie folgt
induktiv definiert:
\begin{enumerate} %fälle
 \item $\alpha$ ist eine Variable $X$:
  \begin{gather*}
    \mathcal{A}(\alpha) = \begin{cases}
                             w &\text{falls}\ X\in\mathcal{A}\\
                             f &\text{falls}\ \neg X\in\mathcal{A}\\
                           \end{cases}
  \end{gather*}

 \item $\alpha$ ist eine Konjunktion $(\beta\wedge\gamma)$:
  \begin{gather*}
    \mathcal{A}(\alpha) =
       \begin{cases}
         w & \mathcal{A}(\beta)=w\ \text{und}\ \mathcal{A}(\gamma)=w\\
         f & \text{sonst}
       \end{cases}
  \end{gather*}

 \item $\alpha$ ist eine Disjunktion $(\beta\vee\gamma)$:
  \begin{gather*}
    \mathcal{A}(\alpha) =
       \begin{cases}
         w & \mathcal{A}(\beta)=w\ \text{oder}\ \mathcal{A}(\gamma)=w\\
         f & \text{sonst}
       \end{cases}
  \end{gather*}

 \item $\alpha$ ist eine Implikation $(\beta\rightarrow\gamma)$:
  \begin{gather*}
    \mathcal{A}(\alpha) =
       \begin{cases}
         f & \mathcal{A}(\beta)=w\ \text{und}\ \mathcal{A}(\gamma)=f\\
         w & \text{sonst}
       \end{cases}
  \end{gather*}

 \item $\alpha$ ist eine Äquivalenz $(\beta\leftrightarrow\gamma)$:
  \begin{gather*}
    \mathcal{A}(\alpha) =
       \begin{cases}
         w & \mathcal{A}(\beta)=\mathcal{A}(\gamma)\\
         f & \text{sonst}
       \end{cases}
  \end{gather*}
\end{enumerate}

\begin{defini}[Tautologie]
  Eine Formel, die unter jeder passenden Belegung den Wahrheitswert $w$
  hat, nennt man \emph{Tautologie}.
\end{defini}

Beispiel: $A\vee\neg A$ oder $A\rightarrow(B\rightarrow A)$ oder
$((A\rightarrow B)\wedge (B\rightarrow C) ) \rightarrow (A\rightarrow
C)$.

\clearpage
\appendix
\pdfbookmark[0]{Index}{index}
\printindex

\end{document}
