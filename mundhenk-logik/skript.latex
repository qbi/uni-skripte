% Einige zusätzliche Informationen für rubber
%  rubber erkennt nicht, dass die Datei weg kann, daher sagen wir es ihm
% rubber: clean $base.thm
%  rubber soll nach Änderungen an der Datei nochmal bauen
% rubber: watch $base.thm
% rubber: makeidx.tool      xindy
% rubber: makeidx.language  german-din
% rubber: makeidx.modules   indexstyle.xdy
%
% scrreprt trifft am Besten die Bedürfnisse eines Skripts, das ganze wird
% zweiseitig (twoside), d.h. es wird zwischen linker und rechter Seite
% unterschieden, und wir verwenden zwischen den Absätzen einen Abstand
% von einer halben Zeile (halfparskip) und dafür keinen Absatzeinzug,
% wobei die letzte Zeile eines Absatzes zu min. 1/4 leer ist.

\documentclass[halfparskip*,german,draft,twoside]{scrreprt}

\usepackage{ifthen}
\usepackage{makeidx}
% \usepackage[final]{graphicx}  % Für Grafiken
\usepackage{color}
\usepackage[draft=false,colorlinks,bookmarksnumbered,linkcolor=blue]{hyperref}

\usepackage[latin1]{inputenc}
\usepackage{ngerman}
% \usepackage{nicefrac}
% \usepackage{tabularx}

\usepackage{lmodern}	    % Latin Modern als Schrift verwenden
\usepackage[T1]{fontenc}    % T1-Schriften verwenden -- notwendig für PDFs

\usepackage[intlimits,leqno]{amsmath}
\usepackage{amssymb}     % wird für \R, \C,... gebraucht
\usepackage[thmmarks,hyperref]{ntheorem} % für die Theorem-Umgebungen
                                         % (satz, defini, bemerk)
\usepackage{xspace}      % wird weiter unten gebraucht
\usepackage{slashbox}    % für schräge Striche links oben in der
                         % Tabelle; s. texdoc slashbox

\usepackage{paralist}    % besseres enumerate und itemize und neue
                         % compactenum/compactitem; s. texdoc paralist

\usepackage{svn}         % Zum Auswerten und ordentlichen Darstellen der
                         % SVN-Schlüsselwörter (s. vor \begin{document})
                         % dafür muss in SVN noch das Flag svn:keywords
                         % auf "LastChangedRevision LastChangedDate"
                         % gesetzt werden
% \usepackage{ifpdf}       % Erkennung, ob PDF generiert wird; nützlich zur
                         % Unterscheidung bei Grafiken \input{XYZ.pdf_t}
\usepackage{xkeyval}     % für die Auswertung von Argumentenlisten; s.
                         % Neudefinition von \emph
\usepackage{mparhack}    % Korrigiert einige Probleme mit \marginpar; die
                         % Option [debug] ist hilfreich bei Problemen

% Damit auch die Zeichen im Mathemode in Überschriften fett sind
% <news:lzfyyvx3pt.fsf@tfkp12.physik.uni-erlangen.de>
\addtokomafont{sectioning}{\boldmath}

% nach dem Theoremkopf wird ein Zeilenumbruch eingefügt, die Schrift des
% Körpers ist normal und der Kopf wird fett gesetzt
\theoremstyle{break}
\theorembodyfont{\normalfont}
\theoremheaderfont{\normalfont\bfseries}
\theoremnumbering{arabic}

% Die folgenden Umgebungen werden einzeln nummeriert und am Ende jedes
% Kapitels zurückgesetzt
\newtheorem{satz}{Satz}[chapter]
\newtheorem{lemma}{Lemma}[chapter]
\newtheorem{bemerk}{Bemerkung}[chapter]
\newtheorem{defini}{Definition}[chapter]
\newtheorem{bsp}{Beispiel}[chapter]
\newtheorem{festl}{Festlegung}[chapter]

% Die folgenden Theoremumgebungen bekommen keine Nummer
\theoremstyle{nonumberbreak}
\newtheorem{fakt}{Fakt}

\theoremheaderfont{\scshape}
\theorembodyfont{\normalfont}
% Das Zeichen am Ende eines Beweises
\theoremsymbol{\ensuremath{_\blacksquare}}
% \theoremsymbol{q.\,e.\,d.}
\newtheorem{proof}{Beweis:}

% Hier die Definition, wie \autoref die Umgebungen nennen soll, die mit
% \newtheorem definiert wurden
\newcommand*{\satzautorefname}{Satz}
\newcommand*{\lemmaautorefname}{Lemma}
\newcommand*{\bemerkautorefname}{Bemerkung}
\newcommand*{\definiautorefname}{Definition}
\newcommand*{\bspautorefname}{Beispiel}
\newcommand*{\festlautorefname}{Festlegung}
\newcommand*{\proofautorefname}{Beweis}
% Zwischen Unter- und Unterunterabschnitten sollte nicht unterschieden
% werden.
\renewcommand*{\subsectionautorefname}{Abschnitt}
\renewcommand*{\subsubsectionautorefname}{Abschnitt}

\pagestyle{headings}

\newcommand*{\R}{\mathbb{R}}      % reelle Zahlen
\newcommand*{\C}{\mathbb{C}}      % komplexe Zahlen
\newcommand*{\N}{\mathbb{N}}      % natürliche Zahlen
\newcommand*{\Q}{\mathbb{Q}}      % gebrochene Zahlen
\newcommand*{\Z}{\mathbb{Z}}      % ganze Zahlen

% Wenn irgendwo Unklarheiten zum Inhalt im Skript auftreten, können sie
% einfach mit \help{Ich verstehe das nicht} hervorgehoben werden. Dies
% macht es leichter sie alle zu finden und auch ganz einfach
% auszublenden, indem man den Befehl einfach leer definiert
\newcommand*{\help}[1]{\textcolor{green}{help: #1}}

% \todo ist das gleiche wie \help nur für offene Aufgaben
\newcommand*{\todo}[1]{\textcolor{red}{todo: #1}}

% Um wichtige Begriffe im Text überall gleich vorzuheben (gleiches
% Markup), sollte dieser Befehl verwendet werden. Das Argument wird
% automatisch als Indexeintrag verwendet und am Rand wiederholt. Da unter
% Umständen der Eintrag im Index oder am Rand anders lauten soll --
% z.\,B. Oberbegriff!Unterbegriff für den Index --, akzeptiert der Befehl
% ein optionales Argument in Form einer Liste, die mit
% index=<Indexeintrag>, rand=<Randeintrag> und indexrand=<Index- und
% Randeintrag> die jeweiligen Felder anders belegt.
\makeatletter
\newcommand*{\local@index}{}
\newcommand*{\local@rand}{}
\newcommand*{\local@indexrand}{}
\define@key{local}{index}{\renewcommand*{\local@index}{#1}}
\define@key{local}{rand}{\renewcommand*{\local@rand}{#1}}
\define@key{local}{indexrand}{\renewcommand*{\local@indexrand}{#1}}

\renewcommand*{\emph}[2][]{%
  \begingroup%
    \setkeys{local}{indexrand={#2}}%
    \setkeys{local}{#1}%
    \setkeys{local}{index={\local@indexrand},rand={\local@indexrand}}%
    \setkeys{local}{#1}%
    \textit{#2}%
    \if\@empty\local@index\relax\else\index{\local@index}\fi%
    \if\@empty\local@rand\relax\else%
      \marginpar{\raggedright\small\itshape\local@rand}%
    \fi%
  \endgroup%
}
\renewcommand*{\see}[2]{\textit{\seename} #1}
\makeatother

% Definition für Xindy für die Trennung der einzelnen Abschnitte im
% Index. siehe auch die Datei indexstyle.xdy
\newcommand*{\indexsection}{\minisec}

% Für Leute, die nicht gern o.\,B.\,d.\,A. jedesmal eintippen wollen
\newcommand*{\obda}{o.\,B.\,d.\,A.\xspace}

% Diese Befehle sind dafür gedacht, dass die Symbole für "genau dann wenn"
% im ganzen Dokument gleich aussehen. Außerdem erlaubt es eine schnelle
% Veränderung aller Stellen, falls der Prof. doch nicht mehr gdw nimmt,
% sondern \Leftrightarrow.
\newcommand*{\gdw}{\ifthenelse{\boolean{mmode}}%
			       {\mspace{8mu}gdw\mspace{8mu}}%
			       {$gdw$\xspace}}
\newcommand*{\gdwdef}{\ifthenelse{\boolean{mmode}}%
			       {\mspace{8mu}gdw_{def}\mspace{8mu}}%
			       {$gdw_{def}$\xspace}}

% Um sicherzustellen, dass jeder Betrag-/jede Norm links und rechts die
% Striche bekommt, sind diese Befehle da. Damit kann man nicht die
% rechten Striche vergessen und es wird etwas übersichtlicher. (Vorschlag
% ist aus amsldoc) \abs[\big]{\abs{a}-\abs{b}} \leq \abs{a+b}
\newcommand*{\abs}[2][]{#1\lvert#2#1\rvert}
\newcommand*{\norm}[2][]{#1\lVert#2#1\rVert}

% Das original Epsilon sieht nicht so toll aus
\renewcommand*{\epsilon}{\varepsilon}
% ... und mancheinem gefällt auch das Phi nicht
\renewcommand*{\phi}{\varphi}
% Der wagerechte Strich soll etwas länger sein
\renewcommand*{\vdash}{\mathrel{|}\mathop{\mkern-9mu-\mkern-7mu-}\limits}

% Manchmal möchte man Begriffe erklären oder etwas aufzählen, das aber
% nicht fett gedruckt werden soll. Dazu diese Umdefinition einer
% description mit normaler Schrift
\newenvironment*{mdescription}%
               {\renewcommand{\descriptionlabel}[1]%
			      {\hspace\labelsep\normalfont ##1}%
		 \begin{description}}%
		 {\end{description}}
\newcounter{fall}
\newenvironment*{faelle}%
               {\begin{list}{\textit{\underline{\arabic{fall}.\,Fall:}}}%
                      {\usecounter{fall}%
                        \settowidth{\labelwidth}{\textit{\underline{9.\,Fall:}}}%
                        \setlength{\leftmargin}{1.3cm}%
                        \setlength{\itemindent}{3mm}%
                        \addtolength{\itemindent}{\labelwidth}%
                        \addtolength{\itemindent}{-\leftmargin}%
                      }}%
               {\end{list}}

\makeindex

\SVN $LastChangedRevision$
\SVN $LastChangedDate$

\begin{document}

\title{Logik}
\author{Prof.\,Dr.\,Mundhenk}
\date{Semester: SS 2006}
\maketitle

\clearpage
\chapter*{Vorwort}
{\itshape

  Dieses Skript ist im Rahmen des
  \href{http://www.minet.uni-jena.de/~joergs/skripte/}{Projekts
  "`Vorlesungsskripte der Fakultät für Mathematik und Informatik"'}
  entstanden und wird im Rahmen dieses Projekts weiter betreut. Das
  Skript ist nach bestem Wissen und Gewissen entstanden. Denoch
  garantiert weder der auf der Titelseite genannte Dozent, noch die
  Mitglieder des Projekts für dessen Fehlerfreiheit. Für etwaige Fehler
  und dessen Folgen wird von keiner der genannten Personen eine Haftung
  übernommen. Es steht jeder Person frei, dieses Skript zu lesen, zu
  verändern oder auf anderen Medien verfügbar zu machen, solange ein
  Verweis die Internetadresse
  \url{http://www.minet.uni-jena.de/~joergs/skripte/} des Projekts
  enthalten ist.

  Diese Ausgabe trägt die Versionsnummer~\SVNLastChangedRevision\ und ist
  vom \SVNDate. Eine (mögliche) aktuellere Ausgabe ist auf der Webseite
  des Projekts verfügbar.

  Jeder ist dazu aufgerufen Verbesserungen, Erweiterungen und
  Fehlerkorrekturen für das Skript einzureichen bzw. zu melden oder diese
  selbst einzupflegen -- einfach eine E-Mail an die
  \href{mailto:skripte@listserv.uni-jena.de}{Mailingliste
  \texttt{<skripte@listserv.uni-jena.de>}} senden. Weitere Informationen
  sind unter der oben genannten Internetadresse verfügbar.

  Hiermit möchten wir allen Personen, die an diesem Skript mitgewirkt
  haben, vielmals danken:
  \begin{itemize}
   \item \href{mailto:joerg@alea.gnuu.de}{Jörg Sommer
    \texttt{<joerg@alea.gnuu.de>}} (2006)
  \end{itemize}
}

\clearpage
\pdfbookmark[0]{Inhaltsverzeichnis}{inhaltsverzeichnis}
\tableofcontents

\clearpage
\pdfbookmark[0]{Auflistung der Sätze}{theoremlist}
\chapter*{Auflistung der Theoreme}

\pdfbookmark[1]{Sätze}{satzlist}
\section*{Sätze}
\theoremlisttype{optname}
\listtheorems{satz}

\pdfbookmark[1]{Definitionen und Festlegungen}{definilist}
\section*{Definitionen und Festlegungen}
% \theoremlisttype{all}
\listtheorems{defini,festl}

\clearpage
\pdfbookmark[0]{Literaturverzeichnis}{literaturverzeichnis}
\begin{thebibliography}{99}
 \bibitem{Mendelson} Mendelson: Introduction to mathematical logic
 \bibitem{Booles} Booles/Jeffrey: Computability and logic
 \bibitem{Nerode} Nerode/\ldots: Logic\ldots
\end{thebibliography}

\chapter{Aussagenlogik}

\section{Grundlagen}

Eine \emph{Aussage} ist entweder \emph{wahr} oder \emph{falsch}.

Beispiele für Aussagen:
\begin{itemize}
 \item Die Straße ist nass. (falsche Aussage)
 \item Jena liegt an der Saale. (wahre Aussage)
 \item Hamburg liegt nicht in Thüringen. (falsche Aussage)
\end{itemize}

\emph{Negation} einer Aussage:
\begin{itemize}
 \item Die Straße ist nicht nass. (wahre Aussage)
 \item Jena liegt nicht an der Saale. (falsche Aussage)
\end{itemize}

\emph{Konjunktion} zweier Aussagen:
\begin{itemize}
 \item Jena liegt an der Saale \emph{und} die Straße ist nicht nass.
\end{itemize}

\emph{Disjunktion} zweier Aussagen:
\begin{itemize}
 \item Jena liegt an derr Saale \emph{oder} die Straße ist nicht nass.
\end{itemize}

\textit{Vorsicht:} Umgangssprachlich versteht man unter "`oder"' oft ein
"`entweder \ldots oder"' (genau eine der beiden Aussagen gilt), in der
Logik ist es aber auch möglich, dass beide Teilaussagen wahr sind.

\emph{Implikation} zweier Aussagen:
\begin{itemize}
 \item \emph[rand=wenn\ldots dann,index=wenn\ldots dann]{Wenn
  \textnormal{die Straße nass ist,} dann} liegt Hamburg in
  Thüringen.
\end{itemize}

\emph{Äquivalenz} zweier Aussagen:
\begin{itemize}
 \item Jena liegt an der Saale \emph{genau dann, wenn} Hambug in
  Thüringen liegt.
\end{itemize}

Für die formale Beschreibung von Aussagen verwendet man \emph{Variablen}
bzw. Aussagezeichen wie $A_{0}, A_{1}, A_{2}, \ldots, B_{0}, B_{1},
B_{2},\ldots$ und anstatt Verknüpfungen setzt man Symbole: $\neg$
(Negation), $\wedge$ (Konjunktion), $\vee$ (Disjunktion), $\rightarrow$
(Implikation), $\leftrightarrow$ (Äquivalenz)

\begin{defini}
  Aussagenlogische Formeln sind wie folgt definiert:
  \begin{enumerate}
   \item Jede Variable $A_{0}, A_{1}, A_{2}, \ldots,B_{0}, B_{1}, B_{2},
     \ldots$ ist eine aussagenlogische Formel.
   \item Wenn $\alpha$ und $\beta$ aussagenlogische Formeln sind, dann
    sind auch
    \begin{gather*}
      (\neg \alpha), (\alpha\wedge\beta), (\alpha\vee\beta),
         (\alpha\rightarrow\beta), (\alpha\leftrightarrow\beta)
    \end{gather*}
    aussagenlogische Formeln.
  \end{enumerate}
\end{defini}

\begin{bsp}[Beispiele für aussagenlogische Formeln]
  Wenn $A_{12}$ und $B_{1}$ aussagenlogische Formeln sind, dann sind dies
auch aussagenlogische Formeln:
  \begin{gather*}
    (A_{12} \wedge B_{1}), ((\neg A_{5}) \rightarrow B_{1}),
       ((A_{12}\wedge B_{1}) \vee (\neg ((\neg A_{5})\rightarrow B_{1}))
  \end{gather*}
\end{bsp}

\begin{bemerk}
  überflüssige Klammern können weggelassen werden. $A,B,C,\ldots$ können
auch als Variablen genommen werden.

  Bindungsstärke der Verknüpfungszeichen:
  \begin{enumerate}
   \item $\neg$
   \item $\wedge$, $\vee$
   \item $\rightarrow$
   \item $\leftrightarrow$
  \end{enumerate}

  \begin{gather*}
    (A_{12}\wedge B_{1}) \vee \neg (\neg A_{5}\rightarrow B_{1})
  \end{gather*}
\end{bemerk}

Jede Variable einer aussagenlogische Formel kann einen der
\emph{Wahrheitswerte} $w$ ("`\emph{wahr}"', $T$, 1) und $f$
("`\emph{falsch}"', $F$, 0) annehmen. Der Wahrheitswert einer
zusammengesetzen Formel ergibt sich aus den Wahrheitswerten ihrer Teile.

\begin{table}[h]
  \centering
  \begin{tabular}{cc*{5}{|c}}
    $\alpha$ & $\beta$ & $\alpha\wedge\beta$ & $\alpha\vee\beta$ &
       $\alpha\rightarrow\beta$ & $\alpha\leftrightarrow\beta$ &
       $\neg\alpha$\\
    \hline
    $f$ & $f$ & $f$ & $w$ & $w$ & $w$ & $w$\\
    $f$ & $w$ & $f$ & $w$ & $w$ & $f$ &\\
    $w$ & $f$ & $f$ & $w$ & $f$ & $f$ & $f$\\
    $w$ & $w$ & $w$ & $w$ & $w$ & $w$ &
  \end{tabular}
  \caption{Wahrheitstafeln}
\end{table}

Wenn $\underbrace{\text{die Straße nass ist}}_{A}$, dann
$\underbrace{\text{liegt Hamburg in Thüringen}}_{B}$, wobei $A$ den
Wahrheitswert $f$ und $B$ den Wahrheitswert $f$ hat. Also ist
$A\rightarrow B$ wahr.

\begin{center}
  \begin{tabular}{ccc*{5}{|c}}
    $A$ & $B$ & $C$ & $A\wedge B$ & $B\vee C$ & $A\rightarrow(B\vee C)$ &
    $\neg(A\rightarrow(B\vee C))$ & $\ldots \leftrightarrow \ldots$\\
    \hline
    $f$ & $f$ & $f$ & $f$ & $f$ & $w$ & $f$ & $w$\\
    $f$ & $f$ & $w$ & $f$ & $w$ & $w$ & $f$ & $w$\\
    $f$ & $w$ & $f$ & $f$ & $w$ & $w$ & $f$ & $w$\\
    $f$ & $w$ & $w$ & $f$ & $w$ & $w$ & $f$ & $w$\\
    $w$ & $f$ & $f$ & $f$ & $f$ & $f$ & $w$ & $f$\\
    $w$ & $f$ & $w$ & $f$ & $w$ & $w$ & $f$ & $w$\\
    $w$ & $w$ & $f$ & $w$ & $w$ & $w$ & $f$ & $f$\\
    $w$ & $w$ & $w$ & $w$ & $w$ & $w$ & $f$ & $f$\\
  \end{tabular}
\end{center}

\emph{Verknüpfungsbaum}: \todo{Bild vom Verknüpfungsbaum der obigen
aussagenlogische Formel}

Die Zuordnung von Wahrheitswerten zu Variablen nennt man eine
\emph{Belegung}. Die Belegung ist eine Funktion von Variablen auf
Wahrheitswerte. Wir beschreiben eine Belegung durch eine Menge
\begin{gather*}
  \mathcal{A} \subseteq \{ A_{0}, A_{1}, A_{2}, \ldots,B_{0}, B_{1},
     B_{2}, \ldots \} \cup \{ \neg A_{0}, \neg A_{1}, \neg A_{2}, \ldots,
\neg B_{0}, \neg B_{1}, \neg B_{2}, \ldots \}
\end{gather*}
mit $\{A_{i}, \neg A_{i}\}\not\subseteq \mathcal{A}$ und $\{B_{i}, \neg
B_{i}\}\not\subseteq \mathcal{A}$ für alle $i$.

$A_{i},B_{i}, \neg A_{i}, \ldots$ und $\neg B_{i}$ nennt man
\emph{Literale}.

Eine Belegung $\mathcal{A}$ \emph{passt} zur Formel $\alpha$, falls für
jede Variable $X$, die in der Formel $\alpha$ vorkommt, gilt:
\begin{center}
  $X\in\mathcal{A}$ oder $\neg X\in\mathcal{A}$
\end{center}

Wenn $\mathcal{A}$ eine Belegung ist, die zu der aussagenlogischen
Formel $\alpha$ passt, dann ist $\mathcal{A}(\alpha)$ wie folgt
induktiv definiert:
\begin{enumerate} %fälle
 \item $\alpha$ ist eine Variable $X$:
  \begin{gather*}
    \mathcal{A}(\alpha) = \begin{cases}
                             w &\text{falls}\ X\in\mathcal{A}\\
                             f &\text{falls}\ \neg X\in\mathcal{A}\\
                           \end{cases}
  \end{gather*}

 \item $\alpha$ ist eine Konjunktion $(\beta\wedge\gamma)$:
  \begin{gather*}
    \mathcal{A}(\alpha) =
       \begin{cases}
         w & \mathcal{A}(\beta)=w\ \text{und}\ \mathcal{A}(\gamma)=w\\
         f & \text{sonst}
       \end{cases}
  \end{gather*}

 \item $\alpha$ ist eine Disjunktion $(\beta\vee\gamma)$:
  \begin{gather*}
    \mathcal{A}(\alpha) =
       \begin{cases}
         w & \mathcal{A}(\beta)=w\ \text{oder}\ \mathcal{A}(\gamma)=w\\
         f & \text{sonst}
       \end{cases}
  \end{gather*}

 \item $\alpha$ ist eine Implikation $(\beta\rightarrow\gamma)$:
  \begin{gather*}
    \mathcal{A}(\alpha) =
       \begin{cases}
         f & \mathcal{A}(\beta)=w\ \text{und}\ \mathcal{A}(\gamma)=f\\
         w & \text{sonst}
       \end{cases}
  \end{gather*}

 \item $\alpha$ ist eine Äquivalenz $(\beta\leftrightarrow\gamma)$:
  \begin{gather*}
    \mathcal{A}(\alpha) =
       \begin{cases}
         w & \mathcal{A}(\beta)=\mathcal{A}(\gamma)\\
         f & \text{sonst}
       \end{cases}
  \end{gather*}
\end{enumerate}

\begin{defini}[Tautologie]
  Eine Formel, die unter jeder passenden Belegung den Wahrheitswert $w$
  hat, nennt man \emph{Tautologie}.
\end{defini}

Beispiele für Tautologien sind $A\vee\neg A$ oder
$A\rightarrow(B\rightarrow A)$ oder der nicht so leicht überschaubare
Ausdruck $((A\rightarrow B)\wedge (B\rightarrow C) ) \rightarrow
(A\rightarrow C)$.

% 2006-04-19

\begin{defini}[Formeläquivalenz]
  Zwei Formeln sind \emph{äquivalent}, wenn sie bei jeder passenden
  Belegung den gleichen Wahrheitswert haben. Die symbolische Schreibweise
  dafür ist $A\equiv B$.
\end{defini}

\begin{bsp}
  $A\rightarrow B \equiv \neg(A\wedge \neg B)$
  \begin{center}
    \begin{tabular}{cc|c|c}
      $A$ & $B$ & $A\rightarrow B$ & $\neg(A\wedge\neg B)$\\
      \hline
      $f$ & $f$ & $w$ & $w$\\
      $f$ & $w$ & $w$ & $w$\\
      $w$ & $f$ & $f$ & $f$\\
      $w$ & $w$ & $w$ & $w$
    \end{tabular}
  \end{center}
\end{bsp}

Grundlegene Äquivalenzen:
\begin{itemize}
 \item $A \wedge B \equiv B\wedge A$ \hfill (\emph{Kommutativität})\\
  $A \vee B \equiv B\vee A$
 \item $A\wedge (B\wedge C) \equiv (A\wedge B)\wedge C$ \hfill
  (\emph{Assoziativität})\\
  $A\vee (B\vee C) \equiv (A\vee B)\vee C$
 \item $A\wedge (B\vee C) \equiv (A\wedge B) \vee (A\wedge C)$
  \hfill (\emph{Distribitivität})\\
  $A\vee (B\wedge C) \equiv (A\vee B) \wedge (A\vee C)$
 \item $A \equiv \neg(\neg A)$ \hfill (\emph{Doppelnegation})
 \item $\neg(A\wedge B) \equiv \neg A \vee \neg B$
  \hfill (\emph{de Morgan'sche Regeln})\\
  $\neg(A\vee B) \equiv \neg A \wedge \neg B$
 \item $A \wedge A \equiv A$\\
  $A\vee A \equiv A$ \hfill (\emph{Absorbtion})
 \item $A \wedge \phi \equiv A$ für alle Tautologien $\phi$\\
  $A \vee \psi \equiv A$ für alle Formeln $\psi$, die immer falsch sind.
 \item $A\rightarrow B \equiv \neg A\vee B$
 \item $A\leftrightarrow B \equiv (A\wedge B) \vee (\neg A\wedge\neg B)$
\end{itemize}

Für jede Aussagenvariable kann eine beliebige Formel eingesetzt werden.
Die daraus entstehenden Formeln bleiben äquivalent. Beispiel:
\begin{gather*}
  (A\rightarrow B) \wedge (C \vee \neg B) \equiv (C\vee \neg B) \wedge
     (A\rightarrow B)
\end{gather*}

\begin{center}
  \begin{tabular}{ccc}
    $\underbrace{\alpha\equiv\beta}$ & $\underbrace{\text{genau dann, wenn}}$
       & $\underbrace{\alpha\leftrightarrow\beta}$ eine Tautologie ist.\\
    \parbox{3.5cm}{\centering Äquivalenz zwischen Formeln} &
       \parbox{3.5cm}{\centering umgangssprachl. Äquivalenz} &
       \parbox{5.5cm}{\centering Verknüpfungszeichen für aussagenlog.
         Formeln für Äquivalenz}
  \end{tabular}
\end{center}

$A\rightarrow B \not\equiv B\rightarrow A$, denn für die Belegung
$\mathcal{A} = \{A,\neg B\}$ ist $\mathcal{A}(A\rightarrow B) = f$ und
$\mathcal{A}(B\rightarrow A) = w$.

$A\rightarrow B \equiv \neg B \rightarrow \neg A$, denn
\begin{align*}
  A\rightarrow B &\equiv \neg A \vee B \equiv B \vee \neg A\\
  &\equiv \neg\neg B \vee\neg A\\
  &\equiv \neg B \rightarrow \neg A
\end{align*}

\subsection{Sind alle Operationen \texorpdfstring{$\neg, \wedge, \vee, \rightarrow,
\leftrightarrow$}{} nötig?}

Eine \emph{Boole'sche Funktion} $g$ ist eine Funktion $g:\{w,f\}^{k}
\rightarrow\{w,f\}$. Jede Boole'sche Funktion lässt sich durch eine
\emph{Wahrheitstafel} beschreiben.

\begin{tabular}{ccc|cl}
  $A_{1}$ & $A_{2}$ & $A_{3}$ & $g(A_{1},A_{2}, A_{3})$ & \\
  \hline
  $f$ & $f$ & $f$ & $f$ &\\
  $f$ & $f$ & $w$ & $w$ & $\leftarrow$\\
  $f$ & $w$ & $f$ & $w$ & $\leftarrow$\\
  $f$ & $w$ & $w$ & $f$ &\\
  $w$ & $f$ & $f$ & $w$ & $\leftarrow$\\
  $w$ & $f$ & $w$ & $f$ &\\
  $w$ & $w$ & $f$ & $w$ & $\leftarrow$\\
  $w$ & $w$ & $w$ & $f$ &\\
\end{tabular}

Die \emph{disjunktive Normalenform} der Funktion $g$ lässt sich leicht
aufstellen, indem man die Literale aller Zeilen, für die die Funktion
wahr ist, konjunktiv verknüpft und diese Terme disjunktiv verknüpft:
\begin{gather*}
  \phi = (\neg A_{1} \wedge \neg A_{2} \wedge A_{3}) \vee (\neg A_{1}\wedge
     A_{2} \wedge \neg A_{3}) \vee (A_{1} \wedge \neg A_{2}\wedge \neg
     A_{3}) \vee (A_{1}\wedge A_{2} \wedge \neg A_{3})\\
  \mathcal{A} = \{A_{1}, \neg A_{2}, \neg A_{3}\}, \mathcal{A}(\phi) =
     w = g(w,f,f)\\
  \mathcal{A}' = \{\neg A_{1}, \neg A_{2}, \neg A_{3}\},
     \mathcal{A}'(\phi) = f = g(f,f,f)
\end{gather*}

Jede Boole'sche Funktion lässt sich durch eine aussagenlogische Formel
mit Verknüpfungszeichen $\neg, \wedge, \vee$ darstellen.

Eine Formel ist in disjunktiver Normalform, wenn sie eine Disjunktion von
Konjunktionen von Literalen ist:
\begin{gather*}
  \bigvee \bigwedge \alpha
\end{gather*}

Für jede beliebige aussagenlogische Formel gibt es eine äquivalente
Formel in disjunktiver Normalform. (ohne Beweis)

\begin{satz}
  Für jede aussagenlogische Formel gibt es eine äquivalente Formel, die
  nur die Verknüpfungszeichen $\neg$ und $\wedge$ enthält.

  \begin{proof}
    Sei $\alpha$ eine aussagenlogische Formel. O.\,B.\,d.\,A. enthält
    $\alpha$ nur die Verknüpfungszeichen $\neg, \wedge, \vee$. Wir führen
    eine Induktion über den Formelaufbau.

    \begin{description}
     \item[IA:] $\alpha$ ist eine Variable $A$

     \item[IV:] Für beliebige Formeln $\beta$ und $\gamma$ gibt es
      äquivalente Formeln $\beta' \equiv \beta$ und
      $\gamma'\equiv\gamma$, die nur $\neg$ und $\wedge$ enthalten.

     \item[IS:]
      \begin{faelle}
       \item $\alpha=\neg\beta$. Dann gilt: $\alpha\equiv\neg\beta'$ und
        $\neg\beta'$ enthält nach IV nur $\neg$ und $\wedge$.

       \item $\alpha = \beta\wedge\gamma$. Dann gilt:
        $\alpha\equiv\beta'\wedge\gamma'$. Nach IV hat
        $\beta'\wedge\gamma'$ nur $\neg$ und $\wedge$ als
        Verknüpfungszeichen.

       \item $\alpha=\beta\vee\gamma$. Dann gilt:
        $\alpha\equiv\beta'\vee\gamma'\equiv\neg(\neg\beta'\wedge\gamma')$
        Nach IV hat $\neg(\neg\beta'\wedge\gamma')$ nur $\neg$ und
        $\wedge$ als Verknüpfungszeichen.
      \end{faelle}
    \end{description}
  \end{proof}
\end{satz}

\begin{bsp}
  $A\vee B$ kann unter Nutzung von Doppelnegation ($\neg\neg A =A$) und
  der Demorganschen Regel ($\neg(A\wedge B) \equiv \neg A\vee \neg B$)
  umformen:
  \begin{gather*}
    A\vee B \equiv \neg\neg A \vee \neg\neg B \equiv \neg(\neg
       A\wedge\neg B)
  \end{gather*}

  weiteres Beispiel:
  \begin{align*}
    A\rightarrow(B\leftrightarrow C) &\equiv \neg A \vee \big((B\wedge C)
       \vee (\neg B\wedge \neg C)\big)\\
    &\equiv \neg \big(A\wedge \neg \big((B\wedge C) \vee (\neg B \wedge \neg
       C)\big)\big)\\
    &\equiv \neg\big(A\wedge \neg(B\wedge C) \wedge \neg(\neg B \wedge \neg
       C) \big)
  \end{align*}
\end{bsp}

\begin{bemerk}
  Analog: Für jede aussagenlogische Formel gibt es eine äquivalente
  Formel, die nur $\neg$ und $\vee$ bzw. $\neg$ und $\rightarrow$ als
  Verknüpfungszeichen benutzt.
\end{bemerk}

\begin{bemerk}
  Kombinationen ohne Negation $\neg$ reichen nicht aus!

  $\neg$ und $\leftrightarrow$ reichen auch nicht aus!
  \begin{center}
    \begin{tabular}{cc|c}
      $A$ & $B$ & $A\leftrightarrow B$\\
      \hline
      $f$ & $f$ & $w$\\
      $f$ & $w$ & $f$\\
      $w$ & $f$ & $f$\\
      $w$ & $w$ & $w$
    \end{tabular}
    \help{wie war hier die Argumentation?}
  \end{center}
\end{bemerk}

Formeln, die nur Konjunktion und Disjunktion bestehen nennt man
\emph{monotone Formeln}, da \help{weiß nicht mehr. Irgendwas die Werte
als 0 und 1 und dann wird mit mehr 1 auf der Eingabe nur mehr 1 auf der
Ausgabe aber nicht weniger}

Mit dem einzelnen Verknüpfungszeichen NOR $\downarrow$ lässt sich jede
aussagenlogische Formel äquivalent darstellen:
\begin{center}
  \begin{tabular}{cc|c}
      $A$ & $B$ & $A\downarrow B$\\
      \hline
      $f$ & $f$ & $w$\\
      $f$ & $w$ & $f$\\
      $w$ & $f$ & $f$\\
      $w$ & $w$ & $f$
  \end{tabular}
  $A \downarrow B\equiv \neg(A\vee B)$
\end{center}

Also sind ist $\neg A\equiv A\downarrow A$ und
\begin{align*}
  A\wedge B &\equiv \neg\neg(A\wedge B)\\
  &\equiv \neg(\neg A\vee \neg B)\\
  &\equiv \neg( (A\downarrow A) \vee (B\downarrow B))\\
  &\equiv (A\downarrow A) \wedge (B\downarrow B)
\end{align*}

Das gleiche gilt für NAND $\uparrow$
\begin{center}
  \begin{tabular}{cc|c}
    $A$ & $B$ & $A\uparrow B$\\
    \hline
    $f$ & $f$ & $w$\\
    $f$ & $w$ & $w$\\
    $w$ & $f$ & $w$\\
    $w$ & $w$ & $f$
  \end{tabular}
  $A \uparrow B\equiv \neg(A\wedge B)$
\end{center}

\section{Ein Axiomensystem für die Aussagenlogik}

\subsection{Vorbemerkung}

\begin{mdescription}
 \item[Behauptung:] Sei $n$ eine natürliche Zahl. Wenn $n$
  ungerade ist, dann ist $n^{2}$ ungerade.
 \item[Beweis:] Sei $n$ eine natürliche Zahl und $n$ sei
  ungerade.

  Weil $n$ ungerade ist, hat $n$ nicht dne Primfaktor 2. $n^{2}$ hat die
  gleichen Primfaktoren wie $n$. Folglich hat $n^{2}$ nicht den
  Primfaktor 2. Also ist $n^{2}$ nicht gerade.
\end{mdescription}

Verallgemeinerte Struktur eines Mathematischen Beweises:
\begin{description}
 \item[Hypothese:] $n$ ist eine ungerade Zahl\hfill $A$
 \item[Anw. Definition:] $n$ ist ungerade $\rightarrow$ $n$ hat nicht
  Primfaktor 2\hfill $A\rightarrow B$
 \item[wahre Aussage:] $n$ hat nicht Primfaktor 2 $\rightarrow$ $n^{2}$
  hat nicht Primfaktor 2\hfill $B\rightarrow C$
 \item[Folgerung:] (Anwendung der Definitionen) $n^{2}$ ist nicht
  gerade\hfill C
\end{description}
Der Beweis ist $A\rightarrow C$.

Die Hypothese $A$ wird als wahr angenommen. Damit muss $B$ auch wahr
sein, da die Anwendung der Definition $A\rightarrow B$ wahr ist. Analog
erhält man für $B\rightarrow C$, dass $C$ wahr ist. Unter der Bedingung,
dass $A$ wahr ist, wird also $C$ wahr: $A\rightarrow C$

\subsection{Anfang}

Ein Axiomensystem dient dazu zu beweisen, dass eine Formel eine
Tautologie ist. Dazu benutzt man den Begriff der \emph{Theorie}.

\begin{defini}[formale Theorie]
  Eine \emph[index=Theorie!formale]{formale Theorie} $\mathcal{S}$
  besteht aus
  \begin{enumerate}
   \item einer Menge von \emph{Formeln} $\mathcal{F}$
   \item einer Menge von \emph[indexrand=Axiome]{Axiomen}
    $\mathrm{Ax} \subseteq \mathcal{F}$
   \item einer endlichen Menge von entscheidbaren Relationen über
    $\mathcal{F}$ -- diese nennt man \emph{Ableitungsregeln}
  \end{enumerate}
\end{defini}

\begin{defini}[Theorie der Aussagenlogik]
  Die \emph[index=Theorie!Aussagenlogik]{Theorie für Aussagenlogik}
  $\mathcal{L}$ besteht aus
  \begin{enumerate}
   \item allen aussagenlogischen Formeln mit den Verknüpfungszeichen
    $\neg$ und $\rightarrow$

   \item den Axiomen, die aus dem Axiomenschemata (A1), (A2) und (A3)
    durch Einsetzen von beliebigen aussagenlogische Formeln für $\alpha$,
    $\beta$ und $\gamma$ entstehen:
    \begin{enumerate}[{A}1]
     \item $\alpha \rightarrow (\alpha\rightarrow \alpha)$ \label{A1}
     \item $\big(\alpha\rightarrow (\beta\rightarrow\gamma)\big)
      \rightarrow \big( (\alpha\rightarrow\beta) \rightarrow
      (\alpha\rightarrow\gamma) \big)$ \label{A2}
     \item $\big( (\neg\beta \rightarrow) \rightarrow (\neg\alpha) \big)
      \rightarrow \big( ( \neg\beta \rightarrow \alpha) \rightarrow
      \beta\big)$ \label{A3}
    \end{enumerate}

   \item der Ableitungsregel \emph{modus ponens} (MP) \index{MP|see{modus ponens}}
    \begin{gather*}
      MP(\alpha, \beta,\gamma) \gdw \beta=\alpha \rightarrow\gamma
    \end{gather*}

    Andere Schreibweise:
    \begin{gather*}
      \frac{\alpha, \alpha\rightarrow\gamma}{\gamma}
    \end{gather*}
  \end{enumerate}
\end{defini}

% 26.4.06

\subsection{Beweise und Theoreme}

\begin{defini}[Beweis]
  Ein \emph{Beweis} in einer Theorie $\mathcal{S}$ ist eine Folge
  $\alpha_1, \alpha_2, \ldots, \alpha_k$ von Formeln von $\mathcal{S}$, so
  dass für $i=1,2,\ldots, n$ gilt:

  $\alpha_i$ ist
  \begin{enumerate}
   \item ein Axiom von $\mathcal{S}$, oder
   \item aus davorstehenden $\alpha_j$ mit einer Ableitungsregel von
    $\mathcal{S}$ ableitbar, d.\,h. $R(\alpha_{j_1}, \alpha_{j_2}, \ldots,
    \alpha_{j_m},\alpha_i)$ für eine Ableitungsregel $R$ von $\mathcal{S}$
    und $j_1,j_2,\ldots,j_m < i$.
  \end{enumerate}
\end{defini}

\begin{defini}[Theorem]
  Ein \emph{Theorem} von $\mathcal{S}$ ist eine Formel, die am Ende eines
  Beweises in $\mathcal{S}$ steht.
\end{defini}

\begin{bsp}[Ein Beweis für $B\rightarrow B$ in $\mathbf{\mathrm{L}}$]
  \label{bsp:1}
  Wir konstruieren eine Folge $\alpha_1,\ldots,\alpha_5$ wie folgt:
  \begin{align*}
    \alpha_1 &= B\rightarrow(B\rightarrow B)  &\text{Instanz von
       (\hyperref[A1]{Axiom 1})}\\
    \alpha_2 &= B\rightarrow((B\rightarrow B) \rightarrow B)
       &\text{Instanz von (\hyperref[A1]{Axiom 1})}\\
    \alpha_3 &= (B\rightarrow((B\rightarrow B) \rightarrow B)) \rightarrow\\
    &\hspace{1.4cm} ((B\rightarrow(B\rightarrow
       B))\rightarrow(B\rightarrow B))
       &\text{Instanz von (\hyperref[A1]{Axiom 2})}\\
    \alpha_4 &= (B\rightarrow(B\rightarrow B))\rightarrow(B\rightarrow B)
       &\text{MP auf $\alpha_2$, $\alpha_3$}\\
    \alpha_5 &= B\rightarrow B
       &\text{MP auf $\alpha_1$, $\alpha_4$}
  \end{align*}

  Wie wir sehen, ist $B\rightarrow B$ ein Theorem von $\mathrm{L}$.

  Für jede Formel $\beta$ gilt also:\\
  \centerline{$\beta \rightarrow \beta$ ist ein Theorem von $\mathrm{L}$.}
\end{bsp}

\begin{defini}[Folgerung]
  $\alpha$ ist eine \emph{Folgerung} von Formelmenge $\Gamma$ in
  $\mathcal{S}$, falls es einen Beweis für $\alpha$ in der Theorie
  $\mathcal{S}$ gibt, zu der man $\Gamma$ zu den Axiomen hinzugenommen hat.

  Schreibweisen:\\
  \begin{tabular}{rcl}
    $\Gamma \vdash_{\mathcal{S}} \alpha$ & bedeutet & $\alpha$ ist
       Folgerung von $\Gamma$ in $\mathcal{S}$\\
    $\emptyset \vdash_{\mathcal{S}} \alpha$ & schreibt man &
       $\vdash_{\mathcal{S}} \alpha$\\
    $\vdash_{\mathcal{S}} \alpha$ & bedeutet &
       $\alpha$ ist Theorem von $\mathcal{S}$
  \end{tabular}

  Falls $\Gamma=\{\beta_1,\ldots,\beta_k\}$ eine endliche Menge ist,
  schreibt man

  \begin{tabular}{rcl}
    $\beta_1,\ldots,\beta_k \vdash_{\mathcal{S}} \alpha$ & anstelle von &
       $\{ \beta_1,\ldots,\beta_k \} \vdash_{\mathcal{S}} \alpha$ \\
    $\Gamma, \beta \vdash_{\mathcal{S}} \alpha$ & anstelle von & $\Gamma
       \cup \beta \vdash_{\mathcal{S}} \alpha$ \\
  \end{tabular}
\end{defini}

\begin{bsp}
  Wir zeigen:
  \begin{gather*}
    \alpha\rightarrow\beta, \beta\rightarrow\gamma
       \vdash_{\mathcal{S}} \alpha\rightarrow\gamma
  \end{gather*}
  \begin{align*}
    (1)\quad & \alpha\rightarrow\beta & \text{Hypothese}\\
    (2)\quad & \beta\rightarrow\gamma & \text{Hypothese}\\
    (3)\quad & (\beta\rightarrow\gamma) \rightarrow
       (\alpha\rightarrow(\beta\rightarrow\gamma)) &
       \text{\hyperref[A1]{Axiom 1}} \\
    (4)\quad & \alpha\rightarrow(\beta\rightarrow\gamma) & \text{MP 2,3}\\
    (5)\quad & (\alpha\rightarrow(\beta\rightarrow\gamma)) \rightarrow
       ( (\alpha\rightarrow\beta) \rightarrow ( \alpha\rightarrow\gamma))
       & \text{\hyperref[A1]{Axiom 2}} \\
    (6)\quad & (\alpha\rightarrow\beta) \rightarrow ( \alpha\rightarrow\gamma)
       & \text{MP 4,5} \\
    (7)\quad & \alpha\rightarrow\gamma & \text{MP 1,6}
  \end{align*}
\end{bsp}

\subsection{Deduktionstheorem}

\begin{satz}[Deduktionstheorem]
  Sind $\alpha$ und $\beta$ zwei aussagenlogische Formeln und $\Gamma$
  eine Formelmenge, dann gilt:
  \begin{gather*}
    \Gamma, \alpha \vdash_{L} \beta \gdw \Gamma \vdash_{L} \alpha\rightarrow\beta
  \end{gather*}

  \begin{proof}
    \begin{mdescription}
      \item["`$\Leftarrow$"'] gelte $\Gamma \vdash_{L} \alpha\rightarrow\beta$.

      Da $\Gamma, \alpha \vdash_{L} \alpha$ und $\Gamma, \alpha \vdash_{L}
      \alpha\rightarrow\beta$ folgt mittels Anwendung von MP:
      $\Gamma,\alpha \vdash_{L} \beta$

     \item["`$\Rightarrow$"'] Es gelte $\Gamma, \alpha \vdash_{L} \beta$

      Wir führen eine Induktion über die Länge $k$ des Beweises von
      $\beta$ aus $\Gamma,\alpha$.

      \begin{mdescription}
       \item[IA:] $k=1$: Der Beweis von $\beta$ besteht nur aus $\beta$.
        \begin{faelle}
         \item $\beta$ ist ein Axiom oder $\beta\in\Gamma$.

          Dann gilt $\Gamma \vdash_{L} \beta$. Mit \hyperref[A1]{Axiom 1}
          $\beta \rightarrow (\alpha\rightarrow\beta)$ und MP folgt
          $\Gamma \vdash_{L} \alpha \rightarrow\beta$.
          \begin{align*}
            \beta&&\text{Axiom oder Hypo.}\\
            \beta\rightarrow(\alpha\rightarrow\beta)
               &&\text{\hyperref[A1]{Axiom 1}}\\
            \todo{hier fehlt was}
          \end{align*}

         \item $\beta=\alpha$. Dann ist $\alpha\rightarrow\beta =
          \beta\rightarrow\beta$.

          Da $\vdash_{L} \beta\rightarrow\beta$, folgt $\Gamma \vdash_{L}
          \beta\rightarrow\beta$
        \end{faelle}

       \item[IV:] Die Belegung gilt für alle Formeln $\beta$ mit Beweisen
        der Länge $\leq n$.

       \item[IS:] $\Gamma, \alpha \vdash_{L} \beta$ durch einen Beweis mit
        der Länge $n+1$
        \begin{gather*}
          \alpha_{1}, \ldots,\alpha_{i},\ldots,\alpha_{j},\ldots,
             \alpha_{n+1} = \beta
        \end{gather*}

        \begin{faelle}
         \item $\beta$ ist eine Axiom oder aus $\Gamma$ oder
          $\beta=\alpha$.

          geht genauso wie Indunktionsanfang.

         \item $\beta$ entsteht durch MP aus $\alpha_{i}$ und
          $\alpha_{j}$ ($i,j\leq n$), $\alpha_{j}=(\alpha_{i}\rightarrow
          \beta)$

          Nach Indunktionsvorraussetzung gilt $\Gamma \vdash_{L}
          \alpha\rightarrow\alpha_{i}$ und $\Gamma \vdash_{L}
          \alpha\rightarrow (\alpha_{i}\rightarrow\beta)$. Mit \hyperref[A1]{Axiom 2}
          $(\alpha\rightarrow(\beta\rightarrow\gamma)) \rightarrow
          ((\alpha\rightarrow\beta)\rightarrow(\alpha\rightarrow\gamma))$
          ist $(\alpha\rightarrow(\alpha_{i}\rightarrow\beta)) \rightarrow
          ((\alpha\rightarrow\alpha_{i}) \rightarrow
          (\alpha\rightarrow\beta)$ ein Axiom von $L$. Durch Anwendung
          von modus ponens mit obigen Formeln folgt $\Gamma \vdash_{L}
          \alpha\rightarrow\beta$.
        \end{faelle}
      \end{mdescription}
    \end{mdescription}
  \end{proof}
\end{satz}

\begin{lemma}\label{lem:1}
  $\alpha\rightarrow(\beta \rightarrow\gamma), \beta \vdash
  \alpha\rightarrow\gamma$.

  Wir beweisen: $\alpha \rightarrow (\beta\rightarrow\gamma),
  \beta,\alpha \vdash \gamma$
  \begin{align*}
    (1)\quad &\alpha \rightarrow(\beta\rightarrow\gamma)&\text{Hypothese}\\
    (2)\quad &\beta &\text{Hypothese}\\
    (3)\quad &\alpha &\text{Hypothese}\\
    (4)\quad &\beta\rightarrow\gamma &\text{MP 3,1}\\
    (5)\quad &\gamma &\text{MP 2,4}\\
  \end{align*}
  Mit Deduktionstheorem fogt $\alpha(\beta\rightarrow\gamma), \beta \vdash
  \alpha\rightarrow\gamma$.
\end{lemma}

\begin{lemma}
  $\vdash_{L} \neg\neg \beta \rightarrow\beta$.

  \begin{proof}
    \begin{align*}
      (1)\quad &(\neg\beta \rightarrow \neg\neg\beta) \rightarrow ( (\neg\beta
         \rightarrow\neg\beta) \rightarrow \beta)
         &&\text{\hyperref[A3]{Axiom 3}}\\
      (2)\quad &\neg\beta \rightarrow \neg\beta&&\text{\autoref{bsp:1}}\\
      (3)\quad &(\neg\beta \rightarrow \neg\neg\beta) \rightarrow \beta
         &&\text{aus 1,2 mit \autoref{lem:1}}\\
      (4)\quad &\neg\neg\beta \rightarrow (\neg\beta \rightarrow \neg\neg\beta)
         &&\text{\hyperref[A1]{Axiom 1}}\\
      (5)\quad &\neg\neg \beta \rightarrow\beta &&\text{aus 4, 3 mit
         \autoref{lem:1}}
    \end{align*}
  \end{proof}
\end{lemma}

\begin{satz}[Korrektheitssatz]
  Jedes Theorem von $L$ ist eine aussagenlogische Tautologie.

  \begin{proof}
    Sei $\beta$ ein Theorem von $L$. Wir führen eine Induktion über die
    Länge $k$ des Beweises von $\beta$.

    \begin{mdescription}
     \item[IA:] $k=1$: d.\,h. $\beta$ ist eine Axiom. Alle Axiome sind
      Tautologien, also ist $\beta$ auch eine Tautologie.

     \item[IV:] Es gilt die Behauptung für alle Beweise der Länge $\leq n$.

     \item[IS:] $\beta$ habe einen Beweis der Länge $n+1$.
      \begin{faelle}
       \item Falls $\beta$ ein Axiom ist, dann ist $\beta$ eine Tautologie.
       \item Falls $\beta$ durch modus ponens aus $\alpha$ und $\alpha'$
        entstehen, dann sind $\alpha$ und $\alpha'$ nach
        Induktionsvorraussetzung Tautologien. $\alpha' =\alpha
        \rightarrow\beta$. Wir wissen bereits, dass $\beta$ dann
        ebenfalls eine Tautologie ist.
      \end{faelle}
    \end{mdescription}
  \end{proof}
\end{satz}

\clearpage
\appendix

\chapter{Übungsaufgaben}
\section{Blatt 1}
\subsection{Aufgabe 1}
Zeigen Sie folgende Äquivalenzen durch Umformen:
\begin{enumerate}
 \item $A\rightarrow (B \rightarrow C) \equiv (A\wedge B) \rightarrow C$
 \item $(A\rightarrow B) \rightarrow A \equiv A$
 \item $\neg\big(\neg(A\wedge \wedge \neg(B\vee A)) \rightarrow (A
  \rightarrow (\neg B\wedge A)) \big) \equiv A\wedge B$
 \item $A\leftrightarrow B \equiv (A\rightarrow B) \wedge (B\rightarrow A)$
 \item $(A\rightarrow B) \rightarrow C \not\equiv
  A\rightarrow(B\rightarrow C)$
\end{enumerate}
\subsection{Aufgabe 2}
Sind die folgenden Argumentationen logisch korrekt?
\begin{enumerate}
 \item Wenn es regnet, dann ist die Straße nass. Die Straße ist nass,
  also regnet es.

 \item Wenn eine Zahl $x$ auf 0 endet, dann ist sie durch 5 teilbar.
  \begin{enumerate}
   \item $x$ endet nicht mit 0, also ist $x$ nicht durch 5 teilbar.
   \item $x$ ist nicht durch 5 teilbar, also endet $x$ nicht auf 0.
  \end{enumerate}

 \item Wenn $a=0$ oder $b=0$, dann ist $a\cdot b=0$. Es gilt $a\cdot
  b\ne0$, also ist $a\ne0$ und $b\ne0$.
\end{enumerate}

\section{Blatt 2}

\begin{enumerate}[(1)]
 \item $\vdash_{L} (\neg \alpha \rightarrow\alpha) \rightarrow\alpha$

 \item $\alpha\rightarrow(\beta\rightarrow\gamma) \vdash_{L} \beta
  \rightarrow(\alpha\rightarrow\gamma)$

 \item $\vdash_{L} (\neg\beta\rightarrow\neg\alpha) \rightarrow
  (\alpha\rightarrow\beta)$

 \item Theorie $L$ ist konsistent, d.\,h. wenn $\alpha$ eine Theorem von
  $L$ ist, dann ist $\neg\alpha$ kein Theorem von $L$, und wenn $\vdash_{L}
  \neg\alpha$, dann nicht $\vdash_{L} \alpha$.

 \item $\alpha,\neg\alpha \vdash_{L} \beta$ gilt für beliebige Formeln
  $\alpha$ und $\beta$.
\end{enumerate}

\clearpage
\pdfbookmark[0]{Index}{index}
\printindex

\end{document}
